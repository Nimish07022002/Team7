{"ast":null,"code":"var _jsxFileName = \"/Users/nimishsuri/github/Team7/src/src/components/automatic.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Simulate } from './simulate';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Automatic = () => {\n  _s();\n  let capacity = 4;\n  const x = () => {\n    for (var i = 0; i < 4; i++) {\n      // program to generate random strings\n      const plane_name = Math.random().toString(36).substring(2, 7);\n      console.log(plane_name);\n\n      //random fuel\n      var fuel = Math.floor(Math.random() * 200000);\n      var count = 0;\n      for (var j = 0; j < fuel; j++) {\n        count++;\n      }\n      console.log(count);\n\n      //to generate true false\n      if (Math.random() < 3000) {\n        console.log(true);\n      } else {\n        console.log(false);\n      }\n    }\n    const randomBoolean = () => Math.random() >= 0.5;\n    console.log(randomBoolean);\n  };\n  const [MemerP, setName] = useState([{\n    'name': 'p-123',\n    'fuel': 123,\n    'type': 'JET'\n  }, {\n    'name': 'b-1232',\n    'fuel': 113,\n    'type': 'Passenger'\n  }]);\n  const [temerP, setFuel] = useState([{\n    'name': 'Zx-123',\n    'fuel': 1213,\n    'type': 'Cargo'\n  }, {\n    'name': 'S-32',\n    'fuel': 143,\n    'type': 'Raptor'\n  }, {\n    'name': 'L-12',\n    'fuel': 1243,\n    'type': 'Raptor'\n  }]);\n  const [nemerP, setType] = useState([{\n    'name': 'S-1312',\n    'fuel': 1243,\n    'type': 'JET'\n  }, {\n    'name': 'DaSq-32',\n    'fuel': 643,\n    'type': 'Passenger'\n  }, {\n    'name': 'S-32',\n    'fuel': 1143,\n    'type': 'cargo'\n  }]);\n  const [planes, addPlanes] = useState(() => []);\n  addPlanes([MemerP[Math.floor(Math.random())]]);\n  function run() {\n    const element = document.getElementsByClassName(\"plane\");\n    const interval = setInterval(frame, 0.5);\n    let i = 0;\n    let width = 0;\n    function frame() {\n      console.log(`${i} plane is changing`);\n      if (i < planes.length) {\n        if (width > 685) {\n          i++;\n          width = 0;\n        } else {\n          width += 5;\n          element[i % 4].style.left = width / 10 + '%';\n        }\n      } else {\n        clearInterval(interval);\n        console.log('Width function stoped');\n      }\n    }\n  }\n  const CreatePlane = param => {\n    let nP = {\n      name: param[0],\n      fuel: param[1],\n      type: param[2],\n      emergency: param[3],\n      priority: undefined\n    };\n    planes.push(nP);\n  };\n  // CreatePlane(['a123',123,'plane1','medical'])\n  // CreatePlane(['a123',123,'plane1','medical'])\n  // CreatePlane(['a123',123,'plane1','medical'])\n  // CreatePlane(['a123',123,'plane1','medical'])\n\n  console.log(planes);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Simulate, {\n      planes: planes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(Automatic, \"qouVaPexxIyXVc9zBULYR/GrNRM=\");\n_c = Automatic;\nvar _c;\n$RefreshReg$(_c, \"Automatic\");","map":{"version":3,"names":["React","Simulate","useState","Automatic","capacity","x","i","plane_name","Math","random","toString","substring","console","log","fuel","floor","count","j","randomBoolean","MemerP","setName","temerP","setFuel","nemerP","setType","planes","addPlanes","run","element","document","getElementsByClassName","interval","setInterval","frame","width","length","style","left","clearInterval","CreatePlane","param","nP","name","type","emergency","priority","undefined","push"],"sources":["/Users/nimishsuri/github/Team7/src/src/components/automatic.jsx"],"sourcesContent":["import React from 'react'\nimport { Simulate } from './simulate'\nimport { useState } from 'react'\n\n\nexport const Automatic = () => {\n  let capacity = 4\n  const x = () => {\n    for (var i = 0; i < 4; i++) {\n      // program to generate random strings\n      const plane_name = Math.random().toString(36).substring(2, 7);\n      console.log(plane_name);\n\n      //random fuel\n      var fuel = Math.floor(Math.random() * 200000)\n      var count = 0;\n      for (var j = 0; j < fuel; j++) {\n        count++;\n      }\n      console.log(count);\n\n      //to generate true false\n      if (Math.random() < 3000) {\n        console.log(true);\n      }\n      else { console.log(false); }\n    }\n\n    const randomBoolean = () => (Math.random() >= 0.5);\n    console.log(randomBoolean)\n\n  }\n\n  const [MemerP, setName] = useState([{ 'name': 'p-123', 'fuel': 123, 'type': 'JET' }, { 'name': 'b-1232', 'fuel': 113, 'type': 'Passenger' }])\n  const [temerP, setFuel] = useState([{ 'name': 'Zx-123', 'fuel': 1213, 'type': 'Cargo' }, { 'name': 'S-32', 'fuel': 143, 'type': 'Raptor' }, { 'name': 'L-12', 'fuel': 1243, 'type': 'Raptor' }])\n  const [nemerP, setType] = useState([{ 'name': 'S-1312', 'fuel': 1243, 'type': 'JET' }, { 'name': 'DaSq-32', 'fuel': 643, 'type': 'Passenger' }, { 'name': 'S-32', 'fuel': 1143, 'type': 'cargo' }])\n  const [planes, addPlanes] = useState(() => [])\n  addPlanes([MemerP[Math.floor(Math.random())]])\n  function run() {\n    const element = document.getElementsByClassName(\"plane\");\n    const interval = setInterval(frame, 0.5);\n    let i = 0\n    let width = 0;\n    function frame() {\n      console.log(`${i} plane is changing`)\n      if (i < planes.length) {\n        if (width > 685) {\n          i++\n          width = 0\n        }\n        else {\n          width += 5;\n          element[i % 4].style.left = (width / 10) + '%';\n        }\n      }\n      else {\n        clearInterval(interval)\n        console.log('Width function stoped')\n      }\n    }\n  }\n\n  const CreatePlane = (param) => {\n\n    let nP = {\n      name: param[0],\n      fuel: param[1],\n      type: param[2],\n      emergency: param[3],\n      priority: undefined,\n    }\n    planes.push(nP)\n\n  };\n  // CreatePlane(['a123',123,'plane1','medical'])\n  // CreatePlane(['a123',123,'plane1','medical'])\n  // CreatePlane(['a123',123,'plane1','medical'])\n  // CreatePlane(['a123',123,'plane1','medical'])\n\n  console.log(planes)\n\n  return (\n    <div>\n\n      <Simulate planes={planes} />\n\n    </div>\n  )\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,YAAY;AACrC,SAASC,QAAQ,QAAQ,OAAO;AAAA;AAGhC,OAAO,MAAMC,SAAS,GAAG,MAAM;EAAA;EAC7B,IAAIC,QAAQ,GAAG,CAAC;EAChB,MAAMC,CAAC,GAAG,MAAM;IACd,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC1B;MACA,MAAMC,UAAU,GAAGC,IAAI,CAACC,MAAM,EAAE,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC;MAC7DC,OAAO,CAACC,GAAG,CAACN,UAAU,CAAC;;MAEvB;MACA,IAAIO,IAAI,GAAGN,IAAI,CAACO,KAAK,CAACP,IAAI,CAACC,MAAM,EAAE,GAAG,MAAM,CAAC;MAC7C,IAAIO,KAAK,GAAG,CAAC;MACb,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,IAAI,EAAEG,CAAC,EAAE,EAAE;QAC7BD,KAAK,EAAE;MACT;MACAJ,OAAO,CAACC,GAAG,CAACG,KAAK,CAAC;;MAElB;MACA,IAAIR,IAAI,CAACC,MAAM,EAAE,GAAG,IAAI,EAAE;QACxBG,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC;MACnB,CAAC,MACI;QAAED,OAAO,CAACC,GAAG,CAAC,KAAK,CAAC;MAAE;IAC7B;IAEA,MAAMK,aAAa,GAAG,MAAOV,IAAI,CAACC,MAAM,EAAE,IAAI,GAAI;IAClDG,OAAO,CAACC,GAAG,CAACK,aAAa,CAAC;EAE5B,CAAC;EAED,MAAM,CAACC,MAAM,EAAEC,OAAO,CAAC,GAAGlB,QAAQ,CAAC,CAAC;IAAE,MAAM,EAAE,OAAO;IAAE,MAAM,EAAE,GAAG;IAAE,MAAM,EAAE;EAAM,CAAC,EAAE;IAAE,MAAM,EAAE,QAAQ;IAAE,MAAM,EAAE,GAAG;IAAE,MAAM,EAAE;EAAY,CAAC,CAAC,CAAC;EAC7I,MAAM,CAACmB,MAAM,EAAEC,OAAO,CAAC,GAAGpB,QAAQ,CAAC,CAAC;IAAE,MAAM,EAAE,QAAQ;IAAE,MAAM,EAAE,IAAI;IAAE,MAAM,EAAE;EAAQ,CAAC,EAAE;IAAE,MAAM,EAAE,MAAM;IAAE,MAAM,EAAE,GAAG;IAAE,MAAM,EAAE;EAAS,CAAC,EAAE;IAAE,MAAM,EAAE,MAAM;IAAE,MAAM,EAAE,IAAI;IAAE,MAAM,EAAE;EAAS,CAAC,CAAC,CAAC;EAChM,MAAM,CAACqB,MAAM,EAAEC,OAAO,CAAC,GAAGtB,QAAQ,CAAC,CAAC;IAAE,MAAM,EAAE,QAAQ;IAAE,MAAM,EAAE,IAAI;IAAE,MAAM,EAAE;EAAM,CAAC,EAAE;IAAE,MAAM,EAAE,SAAS;IAAE,MAAM,EAAE,GAAG;IAAE,MAAM,EAAE;EAAY,CAAC,EAAE;IAAE,MAAM,EAAE,MAAM;IAAE,MAAM,EAAE,IAAI;IAAE,MAAM,EAAE;EAAQ,CAAC,CAAC,CAAC;EACnM,MAAM,CAACuB,MAAM,EAAEC,SAAS,CAAC,GAAGxB,QAAQ,CAAC,MAAM,EAAE,CAAC;EAC9CwB,SAAS,CAAC,CAACP,MAAM,CAACX,IAAI,CAACO,KAAK,CAACP,IAAI,CAACC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC;EAC9C,SAASkB,GAAG,GAAG;IACb,MAAMC,OAAO,GAAGC,QAAQ,CAACC,sBAAsB,CAAC,OAAO,CAAC;IACxD,MAAMC,QAAQ,GAAGC,WAAW,CAACC,KAAK,EAAE,GAAG,CAAC;IACxC,IAAI3B,CAAC,GAAG,CAAC;IACT,IAAI4B,KAAK,GAAG,CAAC;IACb,SAASD,KAAK,GAAG;MACfrB,OAAO,CAACC,GAAG,CAAE,GAAEP,CAAE,oBAAmB,CAAC;MACrC,IAAIA,CAAC,GAAGmB,MAAM,CAACU,MAAM,EAAE;QACrB,IAAID,KAAK,GAAG,GAAG,EAAE;UACf5B,CAAC,EAAE;UACH4B,KAAK,GAAG,CAAC;QACX,CAAC,MACI;UACHA,KAAK,IAAI,CAAC;UACVN,OAAO,CAACtB,CAAC,GAAG,CAAC,CAAC,CAAC8B,KAAK,CAACC,IAAI,GAAIH,KAAK,GAAG,EAAE,GAAI,GAAG;QAChD;MACF,CAAC,MACI;QACHI,aAAa,CAACP,QAAQ,CAAC;QACvBnB,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;MACtC;IACF;EACF;EAEA,MAAM0B,WAAW,GAAIC,KAAK,IAAK;IAE7B,IAAIC,EAAE,GAAG;MACPC,IAAI,EAAEF,KAAK,CAAC,CAAC,CAAC;MACd1B,IAAI,EAAE0B,KAAK,CAAC,CAAC,CAAC;MACdG,IAAI,EAAEH,KAAK,CAAC,CAAC,CAAC;MACdI,SAAS,EAAEJ,KAAK,CAAC,CAAC,CAAC;MACnBK,QAAQ,EAAEC;IACZ,CAAC;IACDrB,MAAM,CAACsB,IAAI,CAACN,EAAE,CAAC;EAEjB,CAAC;EACD;EACA;EACA;EACA;;EAEA7B,OAAO,CAACC,GAAG,CAACY,MAAM,CAAC;EAEnB,oBACE;IAAA,uBAEE,QAAC,QAAQ;MAAC,MAAM,EAAEA;IAAO;MAAA;MAAA;MAAA;IAAA;EAAG;IAAA;IAAA;IAAA;EAAA,QAExB;AAEV,CAAC;AAAA,GAnFYtB,SAAS;AAAA,KAATA,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}